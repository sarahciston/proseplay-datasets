{"mappings":"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","sources":["src/proseplay.ts","src/window.ts","src/choice.ts"],"sourcesContent":["import \"./proseplay.less\";\n\nimport { Window } from \"./window\";\nimport { Choice } from \"./choice\";\n\ntype Token = {\n  strings: string[]\n  linkIndex?: number | null,\n  horizontal?: boolean,\n  functionNames?: string[]\n};\ntype TokenizedLine = Token[];\ntype TokenizedText = TokenizedLine[];\n\nconst lineTemplate = document.createElement(\"div\");\nlineTemplate.classList.add(\"proseplay-line\");\n\nconst samples = {\n  dickinson: `We talked with each other about each other\nThough neither of us spoke —\nWe were (too engrossed with|listening to) the Second’s Races\nAnd the Hoofs of the Clock —\nPausing in Front of our (Sentenced Faces|Foundering Faces)\n(Time’s Decision shook —|Time compassion Took)\nArks of Reprieve he offered to us —\nArarats — we took —`,\n  homophones: `in the (mist|missed) (see|sea)\n(prey|pray) in the (morning|mourning)\nfor (words|worlds) that (exit|exist)\nas (seep|sleep)`,\n  hypothetically: `(hypothetically|hello)[1-]\n(what if|i said)[1-]\n(we fell|and held)[1-]\n(in love|till death)[1-]`\n};\n\nlet EM: number;\n\nclass ProsePlay {\n  private el: HTMLElement;\n\n  private lines: {\n    el: HTMLElement,\n    tokens: (string | Window)[],\n    windows: Window[]\n  }[] = [];\n  private windows: Window[] = [];\n  private links: Window[][] = [];\n\n  private _isExpanded: boolean = false;\n\n  private functions: {\n    [name: string]: Function\n  } = {};\n\n  constructor(el: HTMLElement) {\n    this.el = el;\n    this.el.classList.add(\"proseplay\");\n    window.addEventListener(\"resize\", this.handleResize);\n\n    EM = parseInt(getComputedStyle(el).fontSize);\n  }\n\n  private static createInstance(): ProsePlay {\n    const container = document.createElement(\"div\");\n    container.classList.add(\"proseplay\");\n    document.body.appendChild(container);\n    const pp = new ProsePlay(container);\n    return pp;\n  }\n\n  /**\n   * Load a sample.\n   * @param name The name of the sample to load.\n   * @returns The ProsePlay instance with the parsed text.\n   */\n  load(name: \"homophones\" | \"hypothetically\" | \"dickinson\"): ProsePlay {\n    this.lines = [];\n    this.windows = [];\n    this.links = [];\n\n    return this.parse(samples[name]);\n  }\n\n  /**\n   * Create a ProsePlay instance and load a sample.\n   * @param name The name of the sample to load.\n   * @returns A ProsePlay instance with the parsed text.\n   */\n  static load(name: \"homophones\" | \"hypothetically\" | \"dickinson\"): ProsePlay {\n    const pp = ProsePlay.createInstance();\n    return pp.load(name);\n  }\n\n  /**\n   * Parse the given string.\n   * @param str The formatted string to parse.\n   * @returns The ProsePlay instance with the parsed text.\n   */\n  parse(str: string): ProsePlay {\n    this.lines = [];\n    this.windows = [];\n    this.links = [];\n\n    str = str.trim();\n    let textTokens: TokenizedText = [];\n    let lines = str.split(\"\\n\");\n    lines.forEach(line => {\n      const lineTokens: TokenizedLine = [];\n      let m = line.matchAll(new RegExp(\n        \"\\\\(\" + // open parentheses\n          \"(\" + // start capturing group\n            \"[^(|)]+\" + // first string\n            \"\\\\|\" + // pipe\n            \"([^(|)]+\\\\|?)+\" + // one or more strings, with optional pipe\n          \")\" + // end capturing group\n        \"\\\\)\" + // close parentheses\n        \"(\\\\[(\\\\d)*(-)?\\\\])?\" // link index\n        , \"g\"));\n      const stringsIndex = 1,\n        linkIndex = 4,\n        orientationIndex = 5;\n\n      let currIndex = 0;\n      for (const match of m) {\n        const index = match.index as number;\n        let isEscaped = line[index - 2] === \"\\\\\";\n\n        let prevToken: Token = {strings: []},\n          currentToken: Token = {strings: []};\n        if (isEscaped) {\n          prevToken.strings = [line.slice(currIndex, index - 1)];\n          currentToken.strings = [line.slice(index, index + match[0].length)];\n        } else {\n          prevToken.strings = [line.slice(currIndex, index)];\n          currentToken.strings = match[stringsIndex].split(\"|\");\n          currentToken.strings.forEach((str, i) => {\n            let [s, fnc] = str.split(\"->\");\n            if (fnc) {\n              if (!currentToken.functionNames) {\n                currentToken.functionNames = [];\n              }\n              currentToken.functionNames[i] = fnc;\n\n              currentToken.strings[i] = s;\n            }\n          });\n          if (match[linkIndex]) {\n            currentToken.linkIndex = parseInt(match[linkIndex]);\n          }\n          if (match[orientationIndex] && (match[orientationIndex] === \"|\" || match[orientationIndex] === \"-\")) {\n            currentToken.horizontal = match[orientationIndex] === \"-\";\n          }\n        }\n        lineTokens.push(prevToken);\n        lineTokens.push(currentToken);\n\n        currIndex = index + match[0].length;\n      }\n      if (currIndex < line.length) {\n        lineTokens.push({strings: [line.slice(currIndex)]});\n      }\n      textTokens.push(lineTokens);\n    });\n  \n    this.constructText(textTokens);\n\n    return this;\n  }\n\n  /**\n   * Create a new ProsePlay instance and parse the given string.\n   * @param str The formatted string to parse.\n   * @returns A ProsePlay instance with the parsed text.\n   */\n  static parse(str: string): ProsePlay {\n    const pp = ProsePlay.createInstance();\n    pp.parse(str);\n    return pp;\n  }\n  \n  private constructText(text: TokenizedText): void {\n    this.el.innerHTML = \"\";\n    text.forEach(line => {\n      const lineEl = lineTemplate.cloneNode(true) as HTMLElement;\n      this.el.appendChild(lineEl);\n      this.lines.push({\n        el: lineEl,\n        tokens: [],\n        windows: []\n      });\n\n      line.forEach(token => {\n        if (token.strings.length === 1) {\n          const span = document.createElement(\"span\");\n          span.classList.add(\"proseplay-plaintext\");\n          span.innerText = token.strings[0];\n          lineEl.append(span);\n          this.lines[this.lines.length - 1].tokens.push(token.strings[0]);\n        } else {\n          const window = new Window(lineEl);\n          if (token.linkIndex) {\n            if (!this.links[token.linkIndex]) {\n              this.links[token.linkIndex] = [];\n            }\n            this.links[token.linkIndex].push(window);\n          }\n          if (token.functionNames) {\n            window.setFunctionNames(token.functionNames);\n          }\n          for (const name in this.functions) {\n            window.setFunction(name, this.functions[name]);\n          }\n          if (token.horizontal) {\n            window.setHorizontal();\n          }\n          this.lines[this.lines.length - 1].tokens.push(window);\n          this.lines[this.lines.length - 1].windows.push(window);\n          this.windows.push(window);\n          token.strings.forEach(str => window.addChoice(new Choice(str)));\n          window.activateChoice(window.choices[0]);\n        }\n      });\n      if (line.length === 0) {\n        lineEl.innerHTML = \"&nbsp;\";\n      }\n    });\n\n    this.links.forEach((windows, i) => {\n      windows.forEach(window => {\n        const otherWindows = windows.filter(otherWindow => otherWindow !== window);\n        window.setLink(i, otherWindows);\n      });\n    });\n  }\n\n  /**\n   * Slide each window to a random choice. If windows are linked, they will move to the same choice index together.\n   */\n  generate(): void {\n    if (this._isExpanded) return;\n\n    let windowsDragged: Window[] = [];\n    this.windows.forEach(window => {\n      if (windowsDragged.includes(window)) return;\n      let choiceIndex = window.random();\n      windowsDragged.push(window);\n      if (window.linkIndex) {\n        this.links[window.linkIndex].forEach(otherWindow => {\n          if (windowsDragged.includes(otherWindow)) return;\n          otherWindow.random(choiceIndex);\n          windowsDragged.push(otherWindow);\n        });\n      }\n    });\n  }\n\n  /**\n   * Expand all windows to show all choices at once. When this is enabled, all other interactions are disabled until `collapse()` is called.\n   */\n  expand(): void {\n    this._isExpanded = true;\n    this.el.classList.toggle(\"proseplay-is-expanded\", this._isExpanded);\n\n    const em = parseFloat(getComputedStyle(this.el).fontSize);\n    \n    this.lines.forEach(line => {\n      let marginBottom = 0;\n\n      line.windows.forEach(window => {\n        let height = window.el.scrollHeight - window.listEl.offsetTop;\n        window.el.style.height = `${height}px`;\n        \n        let y = window.el.scrollHeight - (window.currentIndex + 1) * 1.25 * em - 0.06 * em;\n        window.el.style.top = `${y}px`;\n        window.el.style.marginTop = `${-y}px`;\n        marginBottom = Math.max(marginBottom, y);\n\n        window.listEl.style.top = \"0px\";\n\n        let maxWidth = 0;\n        window.choices.forEach((choice, i) => {\n          choice.el.style.opacity = \"1\";\n          if (!window.horizontal) {\n            maxWidth = Math.max(maxWidth, choice.el.offsetWidth);\n          } else {\n            if (i > 0) {\n              maxWidth += EM;\n            }\n            maxWidth += choice.el.offsetWidth;\n          }\n        });\n        window.el.style.width = `${maxWidth}px`;\n\n        window.isHoverable = false;\n      });\n\n      line.el.style.marginBottom = `${marginBottom}px`;\n    });\n  }\n\n  /**\n   * Collapse all windows.\n   */\n  collapse(): void {\n    this._isExpanded = false;\n    this.el.classList.toggle(\"proseplay-is-expanded\", this._isExpanded);\n\n    this.lines.forEach(line => {\n      line.el.style.removeProperty(\"margin-bottom\");\n\n      line.windows.forEach(window => {\n        window.el.style.removeProperty(\"height\");\n        window.el.style.removeProperty(\"top\");\n        window.el.style.removeProperty(\"margin-top\");\n        window.listEl.style.removeProperty(\"top\");\n        window.choices.forEach(choice => {\n          choice.el.style.removeProperty(\"opacity\");\n        });\n        window.listEl.style.removeProperty(\"width\");\n\n        window.isHoverable = true;\n\n        window.activateChoice();\n      });\n    });\n  }\n\n  /**\n   * Check if windows are expanded or collapsed.\n   * @returns A boolean representing whether windows are expanded (true) or collapsed (false).\n   */\n  isExpanded(): boolean {\n    return this._isExpanded;\n  }\n\n  /**\n   * Return the current text.\n   * @returns A string of the current text.\n   */\n  snapshot(): string {\n    let text = \"\";\n    this.lines.forEach(line => {\n      line.tokens.forEach(token => {\n        if (token instanceof Window) {\n          text += token.choices[token.currentIndex].text;\n        } else {\n          text += token;\n        }\n      })\n      text += \"\\n\";\n    });\n\n    return text;\n  }\n\n  /**\n   * Set function to be called when certain choices are selected.\n   * @param name Name of function.\n   * @param fnc Function to be called.\n   */\n  setFunction(name: string, fnc: Function): void {\n    this.functions[name] = fnc;\n    this.windows.forEach(window => window.setFunction(name, fnc));\n  }\n\n  private handleResize = (): void => {\n    this.windows.forEach(window => window.activateChoice());\n  }\n\n  /**\n   * Return a nested list of choices in each window.\n   */\n  get choices(): string[][] {\n    return this.windows.map(window => {\n      return window.choices.map(choice => choice.text);\n    });\n  }\n\n  /**\n   * Return a list of indexes to which each window is currently set.\n   */\n  get currentIndexes(): number[] {\n    return this.windows.map(window => window.currentIndex);\n  }\n\n  /**\n   * Slide a specified window to a specified choice.\n   * @param windowIndex The index of the window to slide.\n   * @param choiceIndex The index of the choice to slide to.\n   */\n  slideWindow(windowIndex: number, choiceIndex: number): void {\n    if (windowIndex > this.windows.length - 1) return;\n    const window = this.windows[windowIndex];\n    if (choiceIndex > window.choices.length - 1) return;\n    window.slideToChoice(choiceIndex);\n  }\n}\n\nexport { ProsePlay }","import { Choice } from \"./choice\";\n\nconst windowTemplate = document.createElement(\"div\");\nwindowTemplate.classList.add(\"proseplay-window\");\nconst listTemplate = document.createElement(\"div\");\nlistTemplate.classList.add(\"proseplay-list\");\nwindowTemplate.append(listTemplate);\n\nconst linkRefTemplate = document.createElement(\"sup\");\nlinkRefTemplate.classList.add(\"proseplay-link-ref\");\n\nconst BUFFER_TIME = 500;\nlet PADDING: number;\n\nconst mouse = { x: 0, y: 0 };\n\nclass Window {\n  el: HTMLElement;\n  listEl: HTMLElement;\n\n  choices: Choice[];\n  currentIndex: number;\n\n  isHoverable: boolean;\n  private isDragged: boolean;\n\n  linkIndex: number | null;\n  private links: Window[] = [];\n\n  functionNames: string[];\n  functions: {\n    [name: string]: Function\n  };\n\n  horizontal: boolean = false;\n\n  constructor(parent: HTMLElement) {\n    this.el = windowTemplate.cloneNode(true) as HTMLElement;\n    parent.appendChild(this.el);\n\n    this.el.addEventListener(\"pointerover\", this.handlePointerOver);\n    this.el.addEventListener(\"pointerdown\", this.handlePointerDown);\n    this.el.addEventListener(\"pointermove\", this.handlePointerMove);\n    this.el.addEventListener(\"pointerup\", this.handlePointerUp);\n    this.el.addEventListener(\"pointerout\", this.handlePointerOut);\n\n    this.listEl = this.el.querySelector(\".proseplay-list\") as HTMLElement;\n\n    this.choices = [];\n    this.currentIndex = 0;\n\n    this.isHoverable = true;\n    this.isDragged = false;\n\n    this.linkIndex = null;\n\n    this.functionNames = [];\n    this.functions = {};\n\n    PADDING = parseInt(getComputedStyle(parent).fontSize) * 0.3;\n  }\n\n  /**\n   * Change the direction of the window to horizontal, i.e. east–west.\n   */\n  setHorizontal(): void {\n    this.horizontal = true;\n    this.el.classList.add(\"proseplay-horizontal\");\n  }\n\n  /**\n   * Add a choice to the window.\n   * @param choice The choice object to be added.\n   */\n  addChoice(choice: Choice): void {\n    this.choices.push(choice);\n    this.listEl.appendChild(choice.el);\n  }\n\n  /**\n   * Activate the specified choice and adjusts position and sizing accordingly.\n   * @param choice The choice to be activated. If none is given, it readjusts to the current choice — this can be useful for resizing.\n   */\n  activateChoice(choice?: Choice): void {\n    if (!choice) {\n      choice = this.choices[this.currentIndex];\n      if (!this.horizontal) {\n        this.listEl.style.top = `-${choice.offsetTop}px`;\n      } else {\n        this.listEl.style.left = `${-Math.abs(choice.offsetLeft) + PADDING}px`;\n      }\n    }\n    this.currentIndex = this.choices.indexOf(choice);\n    this.choices.forEach(otherChoice => otherChoice.deactivate());\n    choice.activate();\n    this.el.style.width = `${choice.offsetWidth}px`;\n  }\n\n  /**\n   * Slide to a random choice.\n   * @param choiceIndex Optional parameter, if a specific choice index is needed.\n   * @returns The chosen index of choices.\n   */\n  random(choiceIndex?: number): number {\n    if (choiceIndex === undefined) {\n      choiceIndex = Math.floor(Math.random() * this.choices.length);\n    }\n    if (choiceIndex > this.choices.length - 1) {\n      choiceIndex = this.choices.length - 1;\n    }\n    const choice = this.choices[choiceIndex];\n    this.activateChoice(choice);\n\n    this.pointerDown();\n    this.listEl.classList.add(\"proseplay-has-transition\");\n    setTimeout(() => this.listEl.classList.remove(\"proseplay-has-transition\"), BUFFER_TIME);\n    setTimeout(() => {\n      if (!this.horizontal) {\n        this.listEl.style.top = `-${choice.offsetTop}px`;\n      } else {\n        this.listEl.style.left = `${-Math.abs(choice.offsetLeft) + PADDING}px`;\n      }\n    }, 15);\n    this.pointerUp();\n\n    return choiceIndex;\n  }\n\n  private slideToPos(pos: number): void {\n    if (!this.horizontal) {\n      this.listEl.style.top = `${pos}px`;\n    } else {\n      this.listEl.style.left = `${pos}px`;\n    }\n\n    const targetChoice = this.getNearestChoice(pos);\n    if (!targetChoice) return;\n\n    this.activateChoice(targetChoice);\n  }\n\n  /**\n   * Slide to a specified index in the window's array of choices.\n   * @param choiceIndex Index of choice to slide to.\n   */\n  slideToChoice(choiceIndex: number) {\n    if (choiceIndex > this.choices.length - 1) return;\n    const choice = this.choices[choiceIndex];\n\n    this.pointerOver();\n    this.pointerDown();\n    this.listEl.classList.add(\"proseplay-has-transition\");\n    setTimeout(() => this.listEl.classList.remove(\"proseplay-has-transition\"), BUFFER_TIME);\n\n    setTimeout(() => {\n      if (!this.horizontal) {\n        this.listEl.style.top = `-${choice.offsetTop}px`;\n      } else {\n        this.listEl.style.left = `${-Math.abs(choice.offsetLeft) + PADDING}px`;\n      }\n    }, 15);\n\n    this.pointerUp();\n    this.pointerOut();\n\n    this.activateChoice(choice);\n  }\n\n  private getNearestChoice(pos: number): Choice | null {\n    let minDist = Infinity;\n    let targetChoice: Choice | null = null;\n    this.choices.forEach(choice => {\n      let dist = !this.horizontal ? Math.abs(pos + choice.offsetTop) : Math.abs(pos + choice.offsetLeft - PADDING);\n      if (dist < minDist) {\n        minDist = dist;\n        targetChoice = choice;\n      }\n    });\n    return targetChoice;\n  }\n\n  private snapToNearestChoice(): void {\n    const choice = this.getNearestChoice(this.pos);\n    if (!choice) return;\n    if (!this.horizontal) {\n      this.listEl.style.top = `-${choice.offsetTop}px`;\n    } else {\n      this.listEl.style.left = `${-Math.abs(choice.offsetLeft) + PADDING}px`;\n    }\n  }\n\n  /**\n   * Return either the `left` or `top` of the window's list element, depending on the direction of the window.\n   */\n  get pos(): number {\n    const property = this.horizontal ? \"left\" : \"top\";\n    return parseInt(getComputedStyle(this.listEl).getPropertyValue(property).replace(\"px\", \"\"));\n  }\n\n  private handlePointerOver = (e: PointerEvent): void => {\n    e.preventDefault();\n\n    if (!this.isHoverable) return;\n\n    const target = e.target as HTMLElement;\n    if (!target.classList.contains(\"proseplay-current\")) return;\n\n    this.pointerOver();\n    this.links.forEach(window => window.pointerOver());\n  }\n  \n  pointerOver() {\n    this.el.classList.add(\"proseplay-hover\");\n    (this.el.parentElement as HTMLElement).classList.add(\"proseplay-has-hover\");\n  }\n\n  private handlePointerDown = (e: PointerEvent): void => {\n    e.preventDefault();\n\n    if (!this.isHoverable) return;\n\n    const target = e.target as HTMLElement;\n    if (!target.classList.contains(\"proseplay-current\")) return;\n\n    this.el.setPointerCapture(e.pointerId);\n\n    this.links.forEach(window => window.pointerDown());\n    this.isDragged = true;\n\n    mouse.x = e.clientX;\n    mouse.y = e.clientY;\n  }\n\n  pointerDown() {\n    this.el.classList.add(\"proseplay-hover\");\n  }\n\n  private handlePointerMove = (e: PointerEvent): void => {\n    e.preventDefault();\n\n    if (!this.isDragged) return;\n\n    const dist = !this.horizontal ? mouse.y - e.clientY : mouse.x - e.clientX;\n    this.slideToPos(this.pos - dist);\n    this.links.forEach(window => {\n      window.slideToPos(this.pos - dist);\n    });\n    mouse.x = e.clientX;\n    mouse.y = e.clientY;\n  }\n\n  private handlePointerOut = (): void => {\n    if (this.isDragged) return;\n    this.pointerOut();\n    this.links.forEach(window => window.pointerOut());\n  }\n  \n  pointerOut() {\n    this.isDragged = false;\n    this.el.classList.remove(\"proseplay-hover\");\n    (this.el.parentElement as HTMLElement).classList.remove(\"proseplay-has-hover\");\n  }\n\n  private handlePointerUp = (e: PointerEvent): void => {\n    e.preventDefault();\n\n    this.pointerUp();\n    this.links.forEach(window => window.pointerUp());\n  }\n\n  pointerUp(): void {\n    this.snapToNearestChoice();\n    this.isDragged = false;\n    this.el.classList.remove(\"proseplay-hover\");\n\n    let functionName = this.functionNames[this.currentIndex];\n    if (functionName) {\n      if (this.functions[functionName]) {\n        this.functions[functionName]();\n      }\n    }\n\n    (this.el.parentElement as HTMLElement).classList.remove(\"proseplay-has-hover\");\n  }\n\n  /**\n   * Set link between this window and other windows.\n   * @param linkIndex Index number of link, as indicated in square brackets.\n   * @param otherWindows Array of other windows in the same link.\n   */\n  setLink(linkIndex: number | null, otherWindows: Window[]): void {\n    this.linkIndex = linkIndex;\n    if (linkIndex) {\n      const sup = linkRefTemplate.cloneNode(true) as HTMLElement;\n      this.el.insertAdjacentElement(\"afterend\", sup);\n      sup.innerText = `${linkIndex}`;\n    }\n    this.links = otherWindows;\n  }\n\n  /**\n   * Set function names.\n   * @param functionNames Array of function names.\n   */\n  setFunctionNames(functionNames: string[]): void {\n    this.functionNames = functionNames;\n  }\n\n  /**\n   * Assign functions to function names.\n   * @param name Name of function.\n   * @param fnc Function to be called.\n   */\n  setFunction(name: string, fnc: Function): void {\n    this.functions[name] = fnc;\n  }\n}\n\nexport { Window }","const choiceTemplate = document.createElement(\"div\");\nchoiceTemplate.classList.add(\"proseplay-choice\");\n\nclass Choice {\n  el: HTMLElement;\n  text: string = \"\";\n  isCurrent: boolean = false;\n\n  constructor(text: string) {\n    this.text = text;\n\n    this.el = choiceTemplate.cloneNode(true) as HTMLElement;\n    if (text !== \" \") {\n      this.el.innerText = text;\n    } else {\n      this.el.innerHTML = \"&hairsp;\";\n    }\n  }\n\n  /**\n   * Activate this choice.\n   */\n  activate() {\n    this.isCurrent = true;\n    this.el.classList.add(\"proseplay-current\");\n  }\n  \n  /**\n   * Deactivate this choice.\n   */\n  deactivate() {\n    this.isCurrent = false;\n    this.el.classList.remove(\"proseplay-current\");\n  }\n\n  /**\n   * Get the `offsetTop` of this element.\n   */\n  get offsetTop(): number {\n    return this.el.offsetTop;\n  }\n\n  /**\n   * Get the `offsetLeft` of this element.\n   */\n  get offsetLeft(): number {\n    return this.el.offsetLeft;\n  }\n\n  /**\n   * Get the `offsetWidth` of this element.\n   */\n  get offsetWidth(): number {\n    return this.el.offsetWidth;\n  }\n}\n\nexport { Choice }"],"names":[],"version":3,"file":"proseplay.js.map","sourceRoot":"../"}